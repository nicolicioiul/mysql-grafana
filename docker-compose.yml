version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - prometheus
      - grafana

    volumes:
      # 8081 -> http://prometheus:9090
      - ./etc/nginx/reverse_proxy.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 127.0.0.1:1084:80

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=15d'
      - '--log.level=debug'
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./etc/prometheus/prometheus_rules.yml:/etc/prometheus/prometheus_rules.yml:ro
      - ./var/prometheus:/prometheus:rw
    depends_on:
      - cadvisor

  grafana:
    image: grafana/grafana:8.3.4-ubuntu
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./etc/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./var/grafana/data:/var/lib/grafana
      - ./etc/grafana/provisioning:/etc/grafana/provisioning:ro
      
    depends_on:
      - prometheus
    extra_hosts:
      - monitoring.hofmanns.de:host-gateway
    environment:  
        #GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
        GF_UNIFIED_ALERTING_ENABLED: "true"
        GF_ALERTING_ENABLED: "false"
        GF_AUTH_ANONYMOUS_ENABLED: "true"
        GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"  

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    devices:
      - "/dev/kmsg:/dev/kmsg"
    #ports:
    #  - 8088:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /dev/disk/:/dev/disk:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    depends_on:
      - redis
    privileged: true    
      
  redis:
    image: redis:latest
    container_name: redis-prometheus
    restart: unless-stopped

  mysql-prometheus-exporter:
    image: prom/mysqld-exporter
    container_name: mysql-prometheus-exporter
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - DATA_SOURCE_NAME=$user:$pass@tcp($db_host:3306)/database
     